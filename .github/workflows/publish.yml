name: Manual Publish

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      create_tag:
        description: 'Create git tag'
        required: true
        default: true
        type: boolean
      publish_npm:
        description: 'Publish to NPM'
        required: true
        default: true
        type: boolean

permissions:
  contents: write
  packages: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run full validation
      run: npm run validate
      
    - name: Build project
      run: npm run build

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ inputs.publish_npm }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Validate NPM token
      run: npm whoami
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
    - name: Bump version
      run: |
        NEW_VERSION=$(npm version ${{ inputs.version_type }} --no-git-tag-version)
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        echo "Version bumped to: $NEW_VERSION"
        
    - name: Commit version bump
      run: |
        git add package.json package-lock.json
        git commit -m "chore: bump version to ${{ env.NEW_VERSION }}"
        
    - name: Create and push tag
      if: ${{ inputs.create_tag }}
      run: |
        git tag ${{ env.NEW_VERSION }}
        git push origin HEAD --tags
        
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Create GitHub Release
      if: ${{ inputs.create_tag }}
      uses: actions/github-script@v7
      with:
        script: |
          const { data: release } = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: '${{ env.NEW_VERSION }}',
            name: 'Release ${{ env.NEW_VERSION }}',
            body: `## ðŸš€ Release ${{ env.NEW_VERSION }}
          
          Published to NPM: \`npm install -g @neublink/gitplus@${{ env.NEW_VERSION }}\`
          
          ### Installation
          \`\`\`bash
          # Install as MCP server in Claude Code
          claude mcp add gitplus -- npx @neublink/gitplus@${{ env.NEW_VERSION }}
          
          # Or install CLI globally
          npm install -g @neublink/gitplus@${{ env.NEW_VERSION }}
          \`\`\`
          
          ### Changes
          Auto-generated from commits since last release.`,
            draft: false,
            prerelease: false
          });
          console.log('Created release:', release.html_url);

  test-published:
    needs: publish
    runs-on: ubuntu-latest
    if: ${{ inputs.publish_npm }}
    steps:
    - name: Wait for NPM propagation
      run: |
        echo "Waiting for NPM package propagation..."
        for i in {1..6}; do
          if npm view @neublink/gitplus@latest version 2>/dev/null; then
            echo "Package is available on NPM"
            break
          fi
          echo "Attempt $i: Package not yet available, waiting 30 seconds..."
          sleep 30
        done
      
    - name: Test NPM installation
      run: |
        # Test global CLI installation
        npm install -g @neublink/gitplus@latest
        
        # Test CLI commands
        gitplus --version
        gitplus --help
        
        echo "âœ… Package installation verified"